Test (tests/purus/passing/TransitiveImport/Test.purs)

Imported Modules: 
------------------------------
  Builtin,
  Prim,
  Test

Exports: 
------------------------------
  test,
  Unit,
  testClsUnit

Re-Exports: 
------------------------------
  

Foreign: 
------------------------------
  

Datatypes: 
------------------------------
newtype TestCls$Dict (a :: Prim.Type) = 
  TestCls$Dict ({ test :: ((a :: Prim.Type) -> ((a :: Prim.Type))) })

data Unit  = 
  Unit 


Declarations: 
------------------------------
testClsUnit :: (Test.TestCls$Dict (Test.Unit))
testClsUnit = 
  (TestCls$Dict: ({   test :: (Test.Unit -> (Test.Unit)) } ->
  ((Test.TestCls$Dict (Test.Unit)))))
  ({ test: \(v: Test.Unit) -> (Unit: Test.Unit) }: {
                                                     test :: (Test.Unit ->
                                                     (Test.Unit))
                                                   })

test :: forall (@a :: Prim.Type). ((Test.TestCls$Dict ((a :: Prim.Type))) -> (((a :: Prim.Type) -> ((a :: Prim.Type)))))
test = 
  \(dict: (Test.TestCls$Dict ((a :: Prim.Type)))) -> 
    case (dict: (Test.TestCls$Dict ((a :: Prim.Type)))) of 
       TestCls$Dict v -> 
         (v: {   test :: ((a :: Prim.Type) -> ((a :: Prim.Type))) })
         .test
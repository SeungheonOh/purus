Lib (tests/purus/passing/ClassRefSyntax/Lib.purs)
Imported Modules: 
  Builtin,
  Lib,
  Prim
Exports: 
  go
Re-Exports: 
  
Foreign: 
  
Declarations: 
X$Dict :: forall (a :: Prim.Type). { go :: (a :: Prim.Type) -> (a :: Prim.Type) } -> { go :: (a :: Prim.Type) -> (a :: Prim.Type) }
X$Dict = 
  \(x: {   go :: (a :: Prim.Type) -> (a :: Prim.Type) }) -> 
    (x: {   go :: (a :: Prim.Type) -> (a :: Prim.Type) })

go :: forall (@a :: Prim.Type). Lib.X$Dict (a :: Prim.Type) -> (a :: Prim.Type) -> (a :: Prim.Type)
go = 
  \(dict: Lib.X$Dict (a :: Prim.Type)) -> 
    case (dict: Lib.X$Dict (a :: Prim.Type)) of 
       X$Dict v -> (v: { go :: (a :: Prim.Type) -> (a :: Prim.Type) }).go